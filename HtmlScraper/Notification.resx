<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timerClose.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAABGdBTUEAALGPC/xhBQAAGihJREFUeF7t
        3XmwXnddx/FfocoqBbGAqICKiPpHWURGBAZnlE3L1ntvytoqW0EEhqWsLR2BWlBhZFF2HYfNssj2h7IV
        ZjqsmUJ775OkTVJaKC0h6d5mKUkez2l+zxC+OUnv8iznnN/r7bymaJHmnufO/X5uuLk3SZIkSZIkSZIk
        SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
        SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZJUXk/YlH5l/oL04PlBetrC
        YjplYSm9qvrXb6r++vb5pfReAGZjbim9rfpY/Mb64/LcID2/+t9PXLchPeiZ56c75A/h0vKq32mqd6TH
        VO9EZ1XvXF+pDv1l1V+HAHTODytfrobBmxc2pL84fn26ff5QLx3ohAvS71RH/7TqHeXcyk35HQeAftk9
        v5i+Xg2C11Sf3N0rnwCV1vz6dEz1Wf6zqneGL1XvFPvDOwkA/bavcm51A17y5I3prvk0qM89dTHdPf/2
        /o0HvSMAUK7r5wbpX+e/n34jnwr1qflBuu/CUnp/9ULvCS88ANR2VZ8gvuspG9K98+lQl6u/6GNhMZ1R
        vbC7wwsNAE321L9TfPIP0m3zKVHXqj7jP756IX8QXlgAWI4tCxvS4/NJURd62gXpLtUL96nwQgLAii0s
        pg/X3w8mnxi1tRMW0x9XL9jW+AICwBpcND9ID8inRq1qmI6aG6SXVy+SP8cPwCTsml9ML8hXR21o/ux0
        64XF9J6GFwsAxqq6N+84Y5hulU+QZtXjNqfbLCyls5teJACYkI88b336pXyKNO2evjndqXoRzgkvCgBM
        w//6oUMzaH6QfrnyxYYXBACmo/528tU9yqdJk+7m/87fb/sD0A4f8TUBU6r+AoyGFwAAZqL+FsL5RGlS
        1T+5qenhA8AsVZ+c/m0+VRp3+Zv8+J7+ALTRrnVL6bh8sjSu6p/fXz1c3+EPgDa70LcNHnPzg/TxhgcN
        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
        AABQAgMgZAAAUAIDIGQAAFACAyBkAABQAgMgZAAAUAIDIGQAAFACAyBkAABQAgMgZAAAUAIDIGQAAFAC
        AyBkAABQAgMgZAAAUAIDIGQAAFACAyBkAABQAgMgZAAAUAIDIGQAAFACAyBkAABQAgMgZAAAUAIDIGQA
        AFACAyBkAABQAgMgZAAAUAIDIGQAAFACAyBkAABQAgMgZAAAUAIDIGQAAFACAyBkAABQAgMgZAAAUAID
        IGQAAFACAyBkAABQAgMgZAAAUAIDIGQAAFACAyBkAABQAgMgZAAAUAIDIGQAAFACAyBkAABQAgMgZAAA
        UAIDIGQAAFACAyBkAABQAgMgZAAAUAIDIGQAAFACAyBkAABQAgMgZAAAUAIDIGQAAFACAyBkAABQAgMg
        ZAAAUAIDIGQAAFACAyBkAABQAgMgZAAAUAIDIGQAAFACAyBkAABQAgMgZAAAUAIDIGQAAFACAyBkAABQ
        AgMgZAAAUAIDIGQAAFACAyBkAABQAgMgZAAAUAIDIGQAAFACAyBkAABQAgMgZAAAUAIDIGQAAFACAyBk
        AABQAgMgZAAAUAIDIGQAAFACAyBkAABQAgMgZAAAUAIDIGQAAFACAyBkAABQAgMgZAAAUAIDIGQAAFAC
        AyBkAABQAgMgZAAAUAIDIGQAAFACAyBkAABQAgMgZAAAUAIDIGQAAFACAyBkAABQAgMgZAAAUAIDIGQA
        AFACAyBkAABQAgMgZAAAUAIDIGQAAFACAyBkAABQAgMgZAAAUAIDIGQAAFCCuUF6Qz59qqsXUdODAoA+
        qe7dK/LpU121iF7e9KAAoE+qe/f8fPpUVz+QpgcFAL0ySE/Lp0919QNpfFAA0CMLS+n4fPpUVw2AxzY9
        KADolUF6eD59qlu3mH638UEBQI88+fx0t3z6VDd/drp19WB2xwcFAD1ydT57OrjqwQzCgwKAPvlWPnk6
        uOrBfCo8KADoj0H6r3zydHBzg/SaxgcGAH0wSC/KJ08Hd8IgPbTxgQFAHwzSH+aTp4N71Dnp6OoBXXvI
        AwOA7tuWhumofPIUq9bRFxoeGgB02txS+mg+dWqq/u9Hmh4cAHTZwlI6KZ86NTV/Xjq2elA3xQcHAJ01
        SDvn16dj8qnT4aoe1ucPeXgA0FF++3+ZLSymhaYHCABdNDdIj8snTkfq5B+k21YPbEd8gADQQT+u/5Rb
        PnG6pRYW0xkNDxEAumWQXpZPm5ZT9cB+tXpw1x3yIAGgO3ZU9+yO+bRpuVUP7a0NDxMAOmFuKb0+nzSt
        pGoA3KN6gNfHBwoAHXDlk76X7pxPmlZatZ5ObXioANBqc4P0/HzKtJryzwc4Pz5YAGitQVo/f3a6dT5l
        Wm3VinpE9UD3H/KAAaB99tU/3TafMK21haX0/oaHDACtUt2rt+fTpXGUvznQ9+ODBoDWGKT1j9ucbpNP
        l8bVCYP0R9UDvvGQBw4As3fduo3pfvlkadzNDdLfNDx0AJil/dVn/3P5VGlSzS2lsxoePgDMxmJ6XT5R
        mmjDdFS1tD7Q+CIAwDQN0r/l66RpVP/5yurBf+qQFwIApmUx/Y8/7z+D5r+Rble9AJ875AUBgMn7hK/4
        n2H18ppbSu9reGEAYCIWltK7zximW+VTpJk1TEctLKYzml4kABin+gvR8/VRW5ofpJOrF8f3CQBgEq6t
        PtlcyCdHbeuEC9L9qxfJDw8CYJzOqz7JvG8+NWprx69Pt88/O8APEAJgLfZVn/W/wxf7daybf4rgYlps
        eEEB4JZ8b24xPSyfFHWtR52Tjq5GwEuqF/La8MICQJOrb74b/nx/P5o/Lx2b/6TA1eGFBoDadfVX+D95
        Y7prPh3qU0+7IN1lfpBOr17oHeGFB6BM26q78Oqnb053yqdCfa7+go6FpXR85ezqxd8T3hkA6Lfdlc/P
        DdJ8dfx/OZ8GldZTL0y/NreUXli9M3y2eke45qB3EAD648rqY/ynK8+rfzc4nwDpQPUXfaxbSg+pBsGp
        1TvLJ6t3lAuqv9ZLsemdCYB22lX5fv27vNVn+S9ftyE9yLfu1Yqr32nmz0+/XY2Bx9bfBapej/U7VOUN
        9ReMADAb1cfj0ysvqz8u1x+f5xbTo0/cmO7j2EuSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
        JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
        JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSeltK/w9AU7KSbOFYjwAAAABJRU5ErkJggg==
</value>
  </data>
</root>